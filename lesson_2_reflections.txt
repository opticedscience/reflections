What happens when you initialize a repository? Why do you need to do it?
when initializing a repository, a folder named .git was created that contained all the metadata that associated with the current status of the repo.
This enabled us to track the changes to each file and the history of each file.

How is the staging area different from the working directory and the repository? What value do you think it offers?
staging area is the intermediate place to hold all the changes that you would like to commit. It acts as a kinda buffer zone for the user to review the changes before making a commit.

How can you use the staging area to make sure you have one commit per logical change?
use git add will only add one update version to the code. then commit will only make that version to master 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to make some new features, or fixing a bug, or a distribution for some specific clients.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
merging two branches will combine the changes, addition by each included. deletion by each included

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
automatic merging create the message automatically.
merge manually allow flexibility.

